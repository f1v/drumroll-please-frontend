[{"/Users/f1v/Work/drumroll-please-frontend/src/index.tsx":"1","/Users/f1v/Work/drumroll-please-frontend/src/reportWebVitals.ts":"2","/Users/f1v/Work/drumroll-please-frontend/src/App.tsx":"3","/Users/f1v/Work/drumroll-please-frontend/src/utils/audioContext.ts":"4","/Users/f1v/Work/drumroll-please-frontend/src/utils/scheduler.ts":"5","/Users/f1v/Work/drumroll-please-frontend/src/recorder/Recorder.tsx":"6","/Users/f1v/Work/drumroll-please-frontend/src/components/CreateNewModule.tsx":"7"},{"size":500,"mtime":1610461432998,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1610461432998,"results":"10","hashOfConfig":"9"},{"size":1542,"mtime":1610471943993,"results":"11","hashOfConfig":"9"},{"size":277,"mtime":1610461432998,"results":"12","hashOfConfig":"9"},{"size":1622,"mtime":1610461432998,"results":"13","hashOfConfig":"9"},{"size":2917,"mtime":1610506709304,"results":"14","hashOfConfig":"9"},{"size":1337,"mtime":1610554497967,"results":"15","hashOfConfig":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1m65eyi",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"utckz9","/Users/f1v/Work/drumroll-please-frontend/src/index.tsx",[],["33","34"],"/Users/f1v/Work/drumroll-please-frontend/src/reportWebVitals.ts",[],"/Users/f1v/Work/drumroll-please-frontend/src/App.tsx",[],"/Users/f1v/Work/drumroll-please-frontend/src/utils/audioContext.ts",[],"/Users/f1v/Work/drumroll-please-frontend/src/utils/scheduler.ts",["35"],"import audioCtx from './audioContext';\n\nlet startTime = 0;\n// USER UPDATE VALUES\nlet padMap: any = [];\nlet tempo = 60;\n\n// RESET WHEN STARTING\nlet currentNote = 0;\nlet nextNoteTime = 0.0; // when the next note is due.\n\nlet lookahead = 8.0;\nlet scheduleAheadTime = 0.120;\n\nexport const nextNote = () => {\n  const secondsPerBeat = 60.0 / tempo;\n  // Add beat length to last beat time\n  nextNoteTime += secondsPerBeat;\n  // Advance the beat number, wrap to zero\n  currentNote++;\n  if (currentNote === 4) {\n    currentNote = 0;\n  }\n}\n\nexport const notesInQueue: any = [];\n\nfunction scheduleNote(beatNumber: number, time: number) {\n  console.log(new Date().getTime() / 1000, 'beatNumber ', beatNumber, 'time ', time);\n  // push the note on the queue, even if we're not playing.\n  notesInQueue.push({ note: beatNumber, time: time });\n}\n\nlet timerID: number | undefined;\nexport const scheduler = () => {\n  let currentTime = audioCtx.currentTime;\n  currentTime -= startTime;\n  // while there are notes that will need to play before the next interval, schedule them and advance the pointer.\n  while (nextNoteTime < currentTime + scheduleAheadTime) {\n    // Convert noteTime to context time.\n    scheduleNote(currentNote, nextNoteTime);\n    nextNote();\n  }\n  timerID = window.setTimeout(scheduler, lookahead);\n}\n\n// UPDATE VALUES\nexport const resetCounters = () => {\n  nextNoteTime = 0.0;\n  startTime = audioCtx.currentTime + 0.200;\n};\n\nexport const stop = () => {\n  currentNote = 0;\n  window.clearTimeout(timerID);\n}\n\nexport const updatePadMap = (map: any) => padMap = map;\n\nexport const updateTempo = (bpm: number) => tempo = bpm;","/Users/f1v/Work/drumroll-please-frontend/src/recorder/Recorder.tsx",[],"/Users/f1v/Work/drumroll-please-frontend/src/components/CreateNewModule.tsx",["36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":58,"column":43,"nodeType":"43","messageId":"44","endLine":58,"endColumn":49},{"ruleId":"41","severity":1,"message":"45","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":20},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"@typescript-eslint/no-unused-vars","'padMap' is assigned a value but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]